fastlane_require 'dotenv'

default_platform(:ios)

platform :ios do

  desc "Generates documentation"
  lane :generate_docs do
    jazzy
  end

  desc "Run tests and generates test coverage report"
  lane :generate_reports do
    scan
    xcov(
      project: "{{cookiecutter.module_name}}.xcodeproj",
      scheme: "{{cookiecutter.module_name}}",
      output_directory: "coverage_report",
      only_project_targets: "true"
    )
  end

  desc "Prepares a release"
  lane :prepare_release do
    ensure_git_branch(
      branch: 'develop'
    )
    ensure_git_status_clean()
    ensure_env_vars(
      env_vars: ["GITHUB_API_TOKEN"]
    )
    increment_build_number(
      xcodeproj: "{{cookiecutter.module_name}}.xcodeproj"
    )
    increment_version_number(
      xcodeproj: "{{cookiecutter.module_name}}.xcodeproj"
    )
    generate_docs
    generate_reports
    git_commit(
      path: ".",
      message: "Version Bump",
      allow_nothing_to_commit: true
    )
    push_to_git_remote
    create_pull_request(
      api_token: ENV["GITHUB_API_TOKEN"],
      repo: "{{cookiecutter.github_name}}/{{cookiecutter.module_name}}",
      title: "New Version"
    )
  end

  desc "Completes a release"
  lane :release do
    ensure_git_branch(
      branch: 'master'
    )
    ensure_git_status_clean
    git_pull
    version = get_version_number(
      xcodeproj: "{{cookiecutter.module_name}}.xcodeproj"
    )
    add_git_tag(
      tag: "v#{version}"
    )
    push_git_tags
  end

end
